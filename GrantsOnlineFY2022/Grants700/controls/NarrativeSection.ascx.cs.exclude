using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data;

public partial class controls_NarrativeSection : System.Web.UI.UserControl
{
    DAL dal = new DAL();
    protected void Page_Load(object sender, EventArgs e)
    {
        this.Page.MaintainScrollPositionOnPostBack = true;

        CalculateWordCounts();

        if (!IsPostBack)
            LoadData();
    }

    private void CalculateWordCounts()
    {
        char[] splitter = { ' ' };

        //IT text
        txtITSectionCount.Text = (txtITSection.Text.Split(splitter).Length - 1).ToString();

        if (txtITSection.Text.Trim() == "")
            txtITSectionCount.Text = "0";

        //PS text
        txtPSSectionCount.Text = (txtPSSection.Text.Split(splitter).Length - 1).ToString();

        if (txtPSSection.Text.Trim() == "")
            txtPSSectionCount.Text = "0";

        //OST
        txtOSTSectionCount.Text = (txtOSTSection.Text.Split(splitter).Length - 1).ToString();
        
        if (txtOSTSection.Text.Trim() == "")
            txtOSTSectionCount.Text = "0";


    }

    public void DisplaySections(bool ShowIT, bool ShowPS, bool ShowOST)
    {
        pnlITSection.Visible = ShowIT;
        pnlPSSection.Visible = ShowPS;
        pnlOSTSection.Visible = ShowOST;
    }

    private void ShowMessage(Label lblMsg, bool success)
    {
        if (success)
        {
            lblMsg.Text = "Information saved successfully.";
            lblMsg.ForeColor = System.Drawing.Color.DarkGreen;
        }
        else
        {
            lblMsg.Text = "Unable to save the information, Please try again!";
            lblMsg.ForeColor = System.Drawing.Color.DarkRed;
        }
    }

    private void LoadData()
    {

        DataSet ds = dal.GetPMTRFRQuestions(Convert.ToInt32(Session["RFRId"]));

        if (ds.Tables[0].Rows.Count > 0)
        {
            DataView dv = new DataView(ds.Tables[0]);

            #region Switchcasesforpages
            switch (Session["PageName"].ToString())
            {
                case "DevelopmentalScreening":
                    txtITSection.Attributes.Add("onkeyup", "javascript:textCounterKeyUp(this, 250);");
                    txtPSSection.Attributes.Add("onkeyup", "javascript:textCounterKeyUp(this, 250);");
                    txtOSTSection.Attributes.Add("onkeyup", "javascript:textCounterKeyUp(this, 250);");

                    txtITSection.Attributes.Add("onkeydown", "javascript:textCounterKeyDown(this, 250);");
                    txtPSSection.Attributes.Add("onkeydown", "javascript:textCounterKeyDown(this, 250);");
                    txtOSTSection.Attributes.Add("onkeydown", "javascript:textCounterKeyDown(this, 250);");


                    dv.RowFilter = "AgeGroupsType = 'IT'";
                    txtITSection.Text = (dv.Count > 0 ? dv[0]["PCDevelopmentalScreening"].ToString() : "");

                    dv.RowFilter = "AgeGroupsType = 'PS'";
                    txtPSSection.Text = (dv.Count > 0 ? dv[0]["PCDevelopmentalScreening"].ToString() : "");

                    dv.RowFilter = "AgeGroupsType = 'OST'";
                    txtOSTSection.Text = (dv.Count > 0 ? dv[0]["PCDevelopmentalScreening"].ToString() : "");
                    break;

            case "ChildAssessment":
                    txtITSection.Attributes.Add("onkeyup", "javascript:textCounterKeyUp(this, 750);");
                    txtPSSection.Attributes.Add("onkeyup", "javascript:textCounterKeyUp(this, 750);");
                    txtOSTSection.Attributes.Add("onkeyup", "javascript:textCounterKeyUp(this, 750);");

                    txtITSection.Attributes.Add("onkeydown", "javascript:textCounterKeyDown(this, 750);");
                    txtPSSection.Attributes.Add("onkeydown", "javascript:textCounterKeyDown(this, 750);");
                    txtOSTSection.Attributes.Add("onkeydown", "javascript:textCounterKeyDown(this, 750);");

                    dv.RowFilter = "AgeGroupsType = 'IT'";
                    txtITSection.Text = (dv.Count > 0 ? dv[0]["PCChildAssessment"].ToString() : ""); 

                    dv.RowFilter = "AgeGroupsType = 'PS'";
                    txtPSSection.Text = (dv.Count > 0 ? dv[0]["PCChildAssessment"].ToString() : ""); 

                    dv.RowFilter = "AgeGroupsType = 'OST'";
                    txtOSTSection.Text = (dv.Count > 0 ? dv[0]["PCChildAssessment"].ToString() : ""); 
                    break;

            case "Curriculum":
                    dv.RowFilter = "AgeGroupsType = 'IT'";
                    txtITSection.Text = (dv.Count > 0 ? dv[0]["PCCurriculum"].ToString() : "");

                    dv.RowFilter = "AgeGroupsType = 'PS'";
                    txtPSSection.Text = (dv.Count > 0 ? dv[0]["PCCurriculum"].ToString() : "");

                    dv.RowFilter = "AgeGroupsType = 'OST'";
                    txtOSTSection.Text = (dv.Count > 0 ? dv[0]["PCCurriculum"].ToString() : "");
                    break;

            case "Transitions":
                    dv.RowFilter = "AgeGroupsType = 'IT'";
                    txtITSection.Text = (dv.Count > 0 ? dv[0]["PCTransitions"].ToString() : "");

                    dv.RowFilter = "AgeGroupsType = 'PS'";
                    txtPSSection.Text = (dv.Count > 0 ? dv[0]["PCTransitions"].ToString() : "");

                    dv.RowFilter = "AgeGroupsType = 'OST'";
                    txtOSTSection.Text = (dv.Count > 0 ? dv[0]["PCTransitions"].ToString() : "");
                    break;

            case "FamilyEngagement":
                    dv.RowFilter = "AgeGroupsType = 'IT'";
                    txtITSection.Text = (dv.Count > 0 ? dv[0]["PCFamilyEngagement"].ToString() : "");

                    dv.RowFilter = "AgeGroupsType = 'PS'";
                    txtPSSection.Text = (dv.Count > 0 ? dv[0]["PCFamilyEngagement"].ToString() : "");

                    dv.RowFilter = "AgeGroupsType = 'OST'";
                    txtOSTSection.Text = (dv.Count > 0 ? dv[0]["PCFamilyEngagement"].ToString() : "");
                    break;

            case "ProfessionalDevelopment":
                    dv.RowFilter = "AgeGroupsType = 'IT'";
                    txtITSection.Text = (dv.Count > 0 ? dv[0]["PCProfessionalDevelopment"].ToString() : "");

                    dv.RowFilter = "AgeGroupsType = 'PS'";
                    txtPSSection.Text = (dv.Count > 0 ? dv[0]["PCProfessionalDevelopment"].ToString() : "");

                    dv.RowFilter = "AgeGroupsType = 'OST'";
                    txtOSTSection.Text = (dv.Count > 0 ? dv[0]["PCProfessionalDevelopment"].ToString() : "");
                    break;

            case "ComprehensiveServices":
                    dv.RowFilter = "AgeGroupsType = 'IT'";
                    txtITSection.Text = (dv.Count > 0 ? dv[0]["PCComprehensiveServices"].ToString() : "");

                    dv.RowFilter = "AgeGroupsType = 'PS'";
                    txtPSSection.Text = (dv.Count > 0 ? dv[0]["PCComprehensiveServices"].ToString() : "");

                    dv.RowFilter = "AgeGroupsType = 'OST'";
                    txtOSTSection.Text = (dv.Count > 0 ? dv[0]["PCComprehensiveServices"].ToString() : "");
                    break;

            case "CollaborationsSharedServices":
                    dv.RowFilter = "AgeGroupsType = 'IT'";
                    txtITSection.Text = (dv.Count > 0 ? dv[0]["CollaborationsSharedServices"].ToString() : "");

                    dv.RowFilter = "AgeGroupsType = 'PS'";
                    txtPSSection.Text = (dv.Count > 0 ? dv[0]["CollaborationsSharedServices"].ToString() : "");

                    dv.RowFilter = "AgeGroupsType = 'OST'";
                    txtOSTSection.Text = (dv.Count > 0 ? dv[0]["CollaborationsSharedServices"].ToString() : "");
                    break;

            case "FCCSystemsSupportStructure":
                    dv.RowFilter = "AgeGroupsType = 'IT'";
                    txtITSection.Text = (dv.Count > 0 ? dv[0]["FCCSystemsSupportStructure"].ToString() : "");

                    dv.RowFilter = "AgeGroupsType = 'PS'";
                    txtPSSection.Text = (dv.Count > 0 ? dv[0]["FCCSystemsSupportStructure"].ToString() : "");

                    dv.RowFilter = "AgeGroupsType = 'OST'";
                    txtOSTSection.Text = (dv.Count > 0 ? dv[0]["FCCSystemsSupportStructure"].ToString() : "");
                    break;

            case "FCCSystemsServicesToproviders":
                    dv.RowFilter = "AgeGroupsType = 'IT'";
                    txtITSection.Text = (dv.Count > 0 ? dv[0]["FCCSystemsServicesToProviders"].ToString() : "");

                    dv.RowFilter = "AgeGroupsType = 'PS'";
                    txtPSSection.Text = (dv.Count > 0 ? dv[0]["FCCSystemsServicesToProviders"].ToString() : "");

                    dv.RowFilter = "AgeGroupsType = 'OST'";
                    txtOSTSection.Text = (dv.Count > 0 ? dv[0]["FCCSystemsServicesToProviders"].ToString() : "");
                    break;

            default:
                     break;
            }
            #endregion
        }

    }

    protected void btnSaveITSection_Click(object sender, EventArgs e)
    {
         int retVal;

         switch (Session["PageName"].ToString())
        {
            case "DevelopmentalScreening":
                retVal = dal.SaveQuestions(Convert.ToInt32(Session["RFRId"]), txtITSection.Text, "-1", "-1", "-1", "-1", "-1", "-1", "-1", "-1", "-1", "IT");
                break;

            case "ChildAssessment":
                retVal = dal.SaveQuestions(Convert.ToInt32(Session["RFRId"]), "-1", txtITSection.Text, "-1", "-1", "-1", "-1", "-1", "-1", "-1", "-1", "IT");
                break;

            case "Curriculum":
                retVal = dal.SaveQuestions(Convert.ToInt32(Session["RFRId"]), "-1", "-1", txtITSection.Text, "-1", "-1", "-1", "-1", "-1", "-1", "-1", "IT");
                break;

            case "Transitions":
                retVal = dal.SaveQuestions(Convert.ToInt32(Session["RFRId"]), "-1", "-1", "-1", txtITSection.Text, "-1", "-1", "-1", "-1", "-1", "-1", "IT");
                break;

            case "FamilyEngagement":
                retVal = dal.SaveQuestions(Convert.ToInt32(Session["RFRId"]), "-1", "-1", "-1", "-1", txtITSection.Text,  "-1", "-1", "-1", "-1", "-1", "IT");
                break;

            case "ProfessionalDevelopment":
                retVal = dal.SaveQuestions(Convert.ToInt32(Session["RFRId"]), "-1", "-1", "-1", "-1", "-1", txtITSection.Text, "-1", "-1", "-1", "-1", "IT");
                break;

            case "ComprehensiveServices":
                retVal = dal.SaveQuestions(Convert.ToInt32(Session["RFRId"]), "-1", "-1", "-1", "-1", "-1", "-1", txtITSection.Text, "-1", "-1", "-1", "IT");
                break;

            case "CollaborationsSharedServices":
                retVal = dal.SaveQuestions(Convert.ToInt32(Session["RFRId"]), "-1", "-1", "-1", "-1", "-1", "-1", "-1", txtITSection.Text, "-1", "-1", "IT");
                break;

            case "FCCSystemsSupportStructure":
                retVal = dal.SaveQuestions(Convert.ToInt32(Session["RFRId"]), "-1", "-1", "-1", "-1", "-1", "-1", "-1", "-1", txtITSection.Text, "-1", "IT");
                break;

            case "FCCSystemsServicesToproviders":
                retVal = dal.SaveQuestions(Convert.ToInt32(Session["RFRId"]), "-1", "-1", "-1", "-1", "-1", "-1", "-1", "-1", "-1", txtITSection.Text, "IT");
                break;

            default:
                retVal = -1;
                break;
            
        }

        if (retVal > 0)
            ShowMessage(lblITSection, true);
        else
            ShowMessage(lblITSection, false);
       

        
    }


    protected void btnSavePSSection_Click(object sender, EventArgs e)
    {
        int retVal;

        switch (Session["PageName"].ToString())
        {
            case "DevelopmentalScreening":
                retVal = dal.SaveQuestions(Convert.ToInt32(Session["RFRId"]), txtPSSection.Text, "-1", "-1", "-1", "-1", "-1", "-1", "-1", "-1", "-1", "PS");
                break;

            case "ChildAssessment":
                retVal = dal.SaveQuestions(Convert.ToInt32(Session["RFRId"]), "-1", txtPSSection.Text, "-1", "-1", "-1", "-1", "-1", "-1", "-1", "-1", "PS");
                break;

            case "Curriculum":
                retVal = dal.SaveQuestions(Convert.ToInt32(Session["RFRId"]), "-1", "-1", txtPSSection.Text, "-1", "-1", "-1", "-1", "-1", "-1", "-1", "PS");
                break;

            case "Transitions":
                retVal = dal.SaveQuestions(Convert.ToInt32(Session["RFRId"]), "-1", "-1", "-1", txtPSSection.Text, "-1", "-1", "-1", "-1", "-1", "-1", "PS");
                break;

            case "FamilyEngagement":
                retVal = dal.SaveQuestions(Convert.ToInt32(Session["RFRId"]), "-1", "-1", "-1", "-1", txtPSSection.Text, "-1", "-1", "-1", "-1", "-1", "PS");
                break;

            case "ProfessionalDevelopment":
                retVal = dal.SaveQuestions(Convert.ToInt32(Session["RFRId"]), "-1", "-1", "-1", "-1", "-1", txtPSSection.Text, "-1", "-1", "-1", "-1", "PS");
                break;

            case "ComprehensiveServices":
                retVal = dal.SaveQuestions(Convert.ToInt32(Session["RFRId"]), "-1", "-1", "-1", "-1", "-1", "-1", txtPSSection.Text, "-1", "-1", "-1", "PS");
                break;

            case "CollaborationsSharedServices":
                retVal = dal.SaveQuestions(Convert.ToInt32(Session["RFRId"]), "-1", "-1", "-1", "-1", "-1", "-1", "-1", txtPSSection.Text, "-1", "-1", "PS");
                break;

            case "FCCSystemsSupportStructure":
                retVal = dal.SaveQuestions(Convert.ToInt32(Session["RFRId"]), "-1", "-1", "-1", "-1", "-1", "-1", "-1", "-1", txtPSSection.Text, "-1", "PS");
                break;

            case "FCCSystemsServicesToproviders":
                retVal = dal.SaveQuestions(Convert.ToInt32(Session["RFRId"]), "-1", "-1", "-1", "-1", "-1", "-1", "-1", "-1", "-1", txtPSSection.Text, "PS");
                break;

            default:
                retVal = -1;
                break;

        }

        if (retVal > 0)
            ShowMessage(lblPSSection, true);
        else
            ShowMessage(lblPSSection, false);
    }

    protected void btnOSTSection_Click(object sender, EventArgs e)
    {
        int retVal;

        switch (Session["PageName"].ToString())
        {
            case "DevelopmentalScreening":
                retVal = dal.SaveQuestions(Convert.ToInt32(Session["RFRId"]), txtOSTSection.Text, "-1", "-1", "-1", "-1", "-1", "-1", "-1", "-1", "-1", "OST");
                break;

            case "ChildAssessment":
                retVal = dal.SaveQuestions(Convert.ToInt32(Session["RFRId"]), "-1", txtOSTSection.Text, "-1", "-1", "-1", "-1", "-1", "-1", "-1", "-1", "OST");
                break;

            case "Curriculum":
                retVal = dal.SaveQuestions(Convert.ToInt32(Session["RFRId"]), "-1", "-1", txtOSTSection.Text, "-1", "-1", "-1", "-1", "-1", "-1", "-1", "OST");
                break;

            case "Transitions":
                retVal = dal.SaveQuestions(Convert.ToInt32(Session["RFRId"]), "-1", "-1", "-1", txtOSTSection.Text, "-1", "-1", "-1", "-1", "-1", "-1", "OST");
                break;

            case "FamilyEngagement":
                retVal = dal.SaveQuestions(Convert.ToInt32(Session["RFRId"]), "-1", "-1", "-1", "-1", txtOSTSection.Text, "-1", "-1", "-1", "-1", "-1", "OST");
                break;

            case "ProfessionalDevelopment":
                retVal = dal.SaveQuestions(Convert.ToInt32(Session["RFRId"]), "-1", "-1", "-1", "-1", "-1", txtOSTSection.Text, "-1", "-1", "-1", "-1", "OST");
                break;

            case "ComprehensiveServices":
                retVal = dal.SaveQuestions(Convert.ToInt32(Session["RFRId"]), "-1", "-1", "-1", "-1", "-1", "-1", txtOSTSection.Text, "-1", "-1", "-1", "OST");
                break;

            case "CollaborationsSharedServices":
                retVal = dal.SaveQuestions(Convert.ToInt32(Session["RFRId"]), "-1", "-1", "-1", "-1", "-1", "-1", "-1", txtOSTSection.Text, "-1", "-1", "OST");
                break;

            case "FCCSystemsSupportStructure":
                retVal = dal.SaveQuestions(Convert.ToInt32(Session["RFRId"]), "-1", "-1", "-1", "-1", "-1", "-1", "-1", "-1", txtOSTSection.Text, "-1", "OST");
                break;

            case "FCCSystemsServicesToproviders":
                retVal = dal.SaveQuestions(Convert.ToInt32(Session["RFRId"]), "-1", "-1", "-1", "-1", "-1", "-1", "-1", "-1", "-1", txtOSTSection.Text, "OST");
                break;

            default:
                retVal = -1;
                break;

        }

        if (retVal > 0)
            ShowMessage(lblOSTSection, true);
        else
            ShowMessage(lblOSTSection, false);
    }
}
